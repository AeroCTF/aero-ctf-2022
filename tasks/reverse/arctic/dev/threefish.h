#ifndef _THREEFISH_H
#define _THREEFISH_H


#include <stdint.h>

#define KeyScheduleConst 0x1BD11BDAA9FC1A22L

typedef struct ThreefishKey {
    uint64_t key[5];
    uint64_t tweak[3];
} ThreefishKey_t;

__always_inline void ThreefishSetKey(ThreefishKey_t* ctx, uint64_t* key, uint64_t* tweak) {
    int keyWords = 4;
    int i;
    uint64_t parity = KeyScheduleConst;

    ctx->tweak[0] = tweak[0];
    ctx->tweak[1] = tweak[1];
    ctx->tweak[2] = tweak[0] ^ tweak[1];

    for (i = 0; i < keyWords; i++) {
        ctx->key[i] = key[i];
        parity ^= key[i];
    }

    ctx->key[i] = parity;
}

__always_inline void ThreefishEncrypt(ThreefishKey_t* ctx, uint64_t* in, uint64_t* out) {
    uint64_t
        b0 = in[0],
        b1 = in[1],
        b2 = in[2],
        b3 = in[3];

    uint64_t
        k0 = ctx->key[0],
        k1 = ctx->key[1],
        k2 = ctx->key[2],
        k3 = ctx->key[3],
        k4 = ctx->key[4];

    uint64_t
        t0 = ctx->tweak[0],
        t1 = ctx->tweak[1],
        t2 = ctx->tweak[2];

    b1 += k1 + t0; b0 += b1 + k0; b1 = ((b1 << 14) | (b1 >> (64 - 14))) ^ b0;
    b3 += k3; b2 += b3 + k2 + t1; b3 = ((b3 << 16) | (b3 >> (64 - 16))) ^ b2;
    b0 += b3; b3 = ((b3 << 52) | (b3 >> (64 - 52))) ^ b0;
    b2 += b1; b1 = ((b1 << 57) | (b1 >> (64 - 57))) ^ b2;
    b0 += b1; b1 = ((b1 << 23) | (b1 >> (64 - 23))) ^ b0;
    b2 += b3; b3 = ((b3 << 40) | (b3 >> (64 - 40))) ^ b2;
    b0 += b3; b3 = ((b3 << 5) | (b3 >> (64 - 5))) ^ b0;
    b2 += b1; b1 = ((b1 << 37) | (b1 >> (64 - 37))) ^ b2;
    b1 += k2 + t1; b0 += b1 + k1; b1 = ((b1 << 25) | (b1 >> (64 - 25))) ^ b0;
    b3 += k4 + 1; b2 += b3 + k3 + t2; b3 = ((b3 << 33) | (b3 >> (64 - 33))) ^ b2;
    b0 += b3; b3 = ((b3 << 46) | (b3 >> (64 - 46))) ^ b0;
    b2 += b1; b1 = ((b1 << 12) | (b1 >> (64 - 12))) ^ b2;
    b0 += b1; b1 = ((b1 << 58) | (b1 >> (64 - 58))) ^ b0;
    b2 += b3; b3 = ((b3 << 22) | (b3 >> (64 - 22))) ^ b2;
    b0 += b3; b3 = ((b3 << 32) | (b3 >> (64 - 32))) ^ b0;
    b2 += b1; b1 = ((b1 << 32) | (b1 >> (64 - 32))) ^ b2;

    b1 += k3 + t2; b0 += b1 + k2; b1 = ((b1 << 14) | (b1 >> (64 - 14))) ^ b0;
    b3 += k0 + 2; b2 += b3 + k4 + t0; b3 = ((b3 << 16) | (b3 >> (64 - 16))) ^ b2;
    b0 += b3; b3 = ((b3 << 52) | (b3 >> (64 - 52))) ^ b0;
    b2 += b1; b1 = ((b1 << 57) | (b1 >> (64 - 57))) ^ b2;
    b0 += b1; b1 = ((b1 << 23) | (b1 >> (64 - 23))) ^ b0;
    b2 += b3; b3 = ((b3 << 40) | (b3 >> (64 - 40))) ^ b2;
    b0 += b3; b3 = ((b3 << 5) | (b3 >> (64 - 5))) ^ b0;
    b2 += b1; b1 = ((b1 << 37) | (b1 >> (64 - 37))) ^ b2;
    b1 += k4 + t0; b0 += b1 + k3; b1 = ((b1 << 25) | (b1 >> (64 - 25))) ^ b0;
    b3 += k1 + 3; b2 += b3 + k0 + t1; b3 = ((b3 << 33) | (b3 >> (64 - 33))) ^ b2;
    b0 += b3; b3 = ((b3 << 46) | (b3 >> (64 - 46))) ^ b0;
    b2 += b1; b1 = ((b1 << 12) | (b1 >> (64 - 12))) ^ b2;
    b0 += b1; b1 = ((b1 << 58) | (b1 >> (64 - 58))) ^ b0;
    b2 += b3; b3 = ((b3 << 22) | (b3 >> (64 - 22))) ^ b2;
    b0 += b3; b3 = ((b3 << 32) | (b3 >> (64 - 32))) ^ b0;
    b2 += b1; b1 = ((b1 << 32) | (b1 >> (64 - 32))) ^ b2;

    b1 += k0 + t1; b0 += b1 + k4; b1 = ((b1 << 14) | (b1 >> (64 - 14))) ^ b0;
    b3 += k2 + 4; b2 += b3 + k1 + t2; b3 = ((b3 << 16) | (b3 >> (64 - 16))) ^ b2;
    b0 += b3; b3 = ((b3 << 52) | (b3 >> (64 - 52))) ^ b0;
    b2 += b1; b1 = ((b1 << 57) | (b1 >> (64 - 57))) ^ b2;
    b0 += b1; b1 = ((b1 << 23) | (b1 >> (64 - 23))) ^ b0;
    b2 += b3; b3 = ((b3 << 40) | (b3 >> (64 - 40))) ^ b2;
    b0 += b3; b3 = ((b3 << 5) | (b3 >> (64 - 5))) ^ b0;
    b2 += b1; b1 = ((b1 << 37) | (b1 >> (64 - 37))) ^ b2;
    b1 += k1 + t2; b0 += b1 + k0; b1 = ((b1 << 25) | (b1 >> (64 - 25))) ^ b0;
    b3 += k3 + 5; b2 += b3 + k2 + t0; b3 = ((b3 << 33) | (b3 >> (64 - 33))) ^ b2;
    b0 += b3; b3 = ((b3 << 46) | (b3 >> (64 - 46))) ^ b0;
    b2 += b1; b1 = ((b1 << 12) | (b1 >> (64 - 12))) ^ b2;
    b0 += b1; b1 = ((b1 << 58) | (b1 >> (64 - 58))) ^ b0;
    b2 += b3; b3 = ((b3 << 22) | (b3 >> (64 - 22))) ^ b2;
    b0 += b3; b3 = ((b3 << 32) | (b3 >> (64 - 32))) ^ b0;
    b2 += b1; b1 = ((b1 << 32) | (b1 >> (64 - 32))) ^ b2;

    b1 += k2 + t0; b0 += b1 + k1; b1 = ((b1 << 14) | (b1 >> (64 - 14))) ^ b0;
    b3 += k4 + 6; b2 += b3 + k3 + t1; b3 = ((b3 << 16) | (b3 >> (64 - 16))) ^ b2;
    b0 += b3; b3 = ((b3 << 52) | (b3 >> (64 - 52))) ^ b0;
    b2 += b1; b1 = ((b1 << 57) | (b1 >> (64 - 57))) ^ b2;
    b0 += b1; b1 = ((b1 << 23) | (b1 >> (64 - 23))) ^ b0;
    b2 += b3; b3 = ((b3 << 40) | (b3 >> (64 - 40))) ^ b2;
    b0 += b3; b3 = ((b3 << 5) | (b3 >> (64 - 5))) ^ b0;
    b2 += b1; b1 = ((b1 << 37) | (b1 >> (64 - 37))) ^ b2;
    b1 += k3 + t1; b0 += b1 + k2; b1 = ((b1 << 25) | (b1 >> (64 - 25))) ^ b0;
    b3 += k0 + 7; b2 += b3 + k4 + t2; b3 = ((b3 << 33) | (b3 >> (64 - 33))) ^ b2;
    b0 += b3; b3 = ((b3 << 46) | (b3 >> (64 - 46))) ^ b0;
    b2 += b1; b1 = ((b1 << 12) | (b1 >> (64 - 12))) ^ b2;
    b0 += b1; b1 = ((b1 << 58) | (b1 >> (64 - 58))) ^ b0;
    b2 += b3; b3 = ((b3 << 22) | (b3 >> (64 - 22))) ^ b2;
    b0 += b3; b3 = ((b3 << 32) | (b3 >> (64 - 32))) ^ b0;
    b2 += b1; b1 = ((b1 << 32) | (b1 >> (64 - 32))) ^ b2;

    b1 += k4 + t2; b0 += b1 + k3; b1 = ((b1 << 14) | (b1 >> (64 - 14))) ^ b0;
    b3 += k1 + 8; b2 += b3 + k0 + t0; b3 = ((b3 << 16) | (b3 >> (64 - 16))) ^ b2;
    b0 += b3; b3 = ((b3 << 52) | (b3 >> (64 - 52))) ^ b0;
    b2 += b1; b1 = ((b1 << 57) | (b1 >> (64 - 57))) ^ b2;
    b0 += b1; b1 = ((b1 << 23) | (b1 >> (64 - 23))) ^ b0;
    b2 += b3; b3 = ((b3 << 40) | (b3 >> (64 - 40))) ^ b2;
    b0 += b3; b3 = ((b3 << 5) | (b3 >> (64 - 5))) ^ b0;
    b2 += b1; b1 = ((b1 << 37) | (b1 >> (64 - 37))) ^ b2;
    b1 += k0 + t0; b0 += b1 + k4; b1 = ((b1 << 25) | (b1 >> (64 - 25))) ^ b0;
    b3 += k2 + 9; b2 += b3 + k1 + t1; b3 = ((b3 << 33) | (b3 >> (64 - 33))) ^ b2;
    b0 += b3; b3 = ((b3 << 46) | (b3 >> (64 - 46))) ^ b0;
    b2 += b1; b1 = ((b1 << 12) | (b1 >> (64 - 12))) ^ b2;
    b0 += b1; b1 = ((b1 << 58) | (b1 >> (64 - 58))) ^ b0;
    b2 += b3; b3 = ((b3 << 22) | (b3 >> (64 - 22))) ^ b2;
    b0 += b3; b3 = ((b3 << 32) | (b3 >> (64 - 32))) ^ b0;
    b2 += b1; b1 = ((b1 << 32) | (b1 >> (64 - 32))) ^ b2;

    b1 += k1 + t1; b0 += b1 + k0; b1 = ((b1 << 14) | (b1 >> (64 - 14))) ^ b0;
    b3 += k3 + 10; b2 += b3 + k2 + t2; b3 = ((b3 << 16) | (b3 >> (64 - 16))) ^ b2;
    b0 += b3; b3 = ((b3 << 52) | (b3 >> (64 - 52))) ^ b0;
    b2 += b1; b1 = ((b1 << 57) | (b1 >> (64 - 57))) ^ b2;
    b0 += b1; b1 = ((b1 << 23) | (b1 >> (64 - 23))) ^ b0;
    b2 += b3; b3 = ((b3 << 40) | (b3 >> (64 - 40))) ^ b2;
    b0 += b3; b3 = ((b3 << 5) | (b3 >> (64 - 5))) ^ b0;
    b2 += b1; b1 = ((b1 << 37) | (b1 >> (64 - 37))) ^ b2;
    b1 += k2 + t2; b0 += b1 + k1; b1 = ((b1 << 25) | (b1 >> (64 - 25))) ^ b0;
    b3 += k4 + 11; b2 += b3 + k3 + t0; b3 = ((b3 << 33) | (b3 >> (64 - 33))) ^ b2;
    b0 += b3; b3 = ((b3 << 46) | (b3 >> (64 - 46))) ^ b0;
    b2 += b1; b1 = ((b1 << 12) | (b1 >> (64 - 12))) ^ b2;
    b0 += b1; b1 = ((b1 << 58) | (b1 >> (64 - 58))) ^ b0;
    b2 += b3; b3 = ((b3 << 22) | (b3 >> (64 - 22))) ^ b2;
    b0 += b3; b3 = ((b3 << 32) | (b3 >> (64 - 32))) ^ b0;
    b2 += b1; b1 = ((b1 << 32) | (b1 >> (64 - 32))) ^ b2;

    b1 += k3 + t0; b0 += b1 + k2; b1 = ((b1 << 14) | (b1 >> (64 - 14))) ^ b0;
    b3 += k0 + 12; b2 += b3 + k4 + t1; b3 = ((b3 << 16) | (b3 >> (64 - 16))) ^ b2;
    b0 += b3; b3 = ((b3 << 52) | (b3 >> (64 - 52))) ^ b0;
    b2 += b1; b1 = ((b1 << 57) | (b1 >> (64 - 57))) ^ b2;
    b0 += b1; b1 = ((b1 << 23) | (b1 >> (64 - 23))) ^ b0;
    b2 += b3; b3 = ((b3 << 40) | (b3 >> (64 - 40))) ^ b2;
    b0 += b3; b3 = ((b3 << 5) | (b3 >> (64 - 5))) ^ b0;
    b2 += b1; b1 = ((b1 << 37) | (b1 >> (64 - 37))) ^ b2;
    b1 += k4 + t1; b0 += b1 + k3; b1 = ((b1 << 25) | (b1 >> (64 - 25))) ^ b0;
    b3 += k1 + 13; b2 += b3 + k0 + t2; b3 = ((b3 << 33) | (b3 >> (64 - 33))) ^ b2;
    b0 += b3; b3 = ((b3 << 46) | (b3 >> (64 - 46))) ^ b0;
    b2 += b1; b1 = ((b1 << 12) | (b1 >> (64 - 12))) ^ b2;
    b0 += b1; b1 = ((b1 << 58) | (b1 >> (64 - 58))) ^ b0;
    b2 += b3; b3 = ((b3 << 22) | (b3 >> (64 - 22))) ^ b2;
    b0 += b3; b3 = ((b3 << 32) | (b3 >> (64 - 32))) ^ b0;
    b2 += b1; b1 = ((b1 << 32) | (b1 >> (64 - 32))) ^ b2;

    b1 += k0 + t2; b0 += b1 + k4; b1 = ((b1 << 14) | (b1 >> (64 - 14))) ^ b0;
    b3 += k2 + 14; b2 += b3 + k1 + t0; b3 = ((b3 << 16) | (b3 >> (64 - 16))) ^ b2;
    b0 += b3; b3 = ((b3 << 52) | (b3 >> (64 - 52))) ^ b0;
    b2 += b1; b1 = ((b1 << 57) | (b1 >> (64 - 57))) ^ b2;
    b0 += b1; b1 = ((b1 << 23) | (b1 >> (64 - 23))) ^ b0;
    b2 += b3; b3 = ((b3 << 40) | (b3 >> (64 - 40))) ^ b2;
    b0 += b3; b3 = ((b3 << 5) | (b3 >> (64 - 5))) ^ b0;
    b2 += b1; b1 = ((b1 << 37) | (b1 >> (64 - 37))) ^ b2;
    b1 += k1 + t0; b0 += b1 + k0; b1 = ((b1 << 25) | (b1 >> (64 - 25))) ^ b0;
    b3 += k3 + 15; b2 += b3 + k2 + t1; b3 = ((b3 << 33) | (b3 >> (64 - 33))) ^ b2;
    b0 += b3; b3 = ((b3 << 46) | (b3 >> (64 - 46))) ^ b0;
    b2 += b1; b1 = ((b1 << 12) | (b1 >> (64 - 12))) ^ b2;
    b0 += b1; b1 = ((b1 << 58) | (b1 >> (64 - 58))) ^ b0;
    b2 += b3; b3 = ((b3 << 22) | (b3 >> (64 - 22))) ^ b2;
    b0 += b3; b3 = ((b3 << 32) | (b3 >> (64 - 32))) ^ b0;
    b2 += b1; b1 = ((b1 << 32) | (b1 >> (64 - 32))) ^ b2;

    b1 += k2 + t1; b0 += b1 + k1; b1 = ((b1 << 14) | (b1 >> (64 - 14))) ^ b0;
    b3 += k4 + 16; b2 += b3 + k3 + t2; b3 = ((b3 << 16) | (b3 >> (64 - 16))) ^ b2;
    b0 += b3; b3 = ((b3 << 52) | (b3 >> (64 - 52))) ^ b0;
    b2 += b1; b1 = ((b1 << 57) | (b1 >> (64 - 57))) ^ b2;
    b0 += b1; b1 = ((b1 << 23) | (b1 >> (64 - 23))) ^ b0;
    b2 += b3; b3 = ((b3 << 40) | (b3 >> (64 - 40))) ^ b2;
    b0 += b3; b3 = ((b3 << 5) | (b3 >> (64 - 5))) ^ b0;
    b2 += b1; b1 = ((b1 << 37) | (b1 >> (64 - 37))) ^ b2;
    b1 += k3 + t2; b0 += b1 + k2; b1 = ((b1 << 25) | (b1 >> (64 - 25))) ^ b0;
    b3 += k0 + 17; b2 += b3 + k4 + t0; b3 = ((b3 << 33) | (b3 >> (64 - 33))) ^ b2;
    b0 += b3; b3 = ((b3 << 46) | (b3 >> (64 - 46))) ^ b0;
    b2 += b1; b1 = ((b1 << 12) | (b1 >> (64 - 12))) ^ b2;
    b0 += b1; b1 = ((b1 << 58) | (b1 >> (64 - 58))) ^ b0;
    b2 += b3; b3 = ((b3 << 22) | (b3 >> (64 - 22))) ^ b2;
    b0 += b3; b3 = ((b3 << 32) | (b3 >> (64 - 32))) ^ b0;
    b2 += b1; b1 = ((b1 << 32) | (b1 >> (64 - 32))) ^ b2;

    out[0] = b0 + k3;
    out[1] = b1 + k4 + t0;
    out[2] = b2 + k0 + t1;
    out[3] = b3 + k1 + 18;
}


#endif // _THREEFISH_H
